// Code generated by protoc-gen-go. DO NOT EDIT.
// source: configurator/api.proto

package configurator

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RadioCfgRequest struct {
	Cluster              uint32   `protobuf:"varint,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RadioCfgRequest) Reset()         { *m = RadioCfgRequest{} }
func (m *RadioCfgRequest) String() string { return proto.CompactTextString(m) }
func (*RadioCfgRequest) ProtoMessage()    {}
func (*RadioCfgRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3040eb487de1b750, []int{0}
}

func (m *RadioCfgRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RadioCfgRequest.Unmarshal(m, b)
}
func (m *RadioCfgRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RadioCfgRequest.Marshal(b, m, deterministic)
}
func (m *RadioCfgRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RadioCfgRequest.Merge(m, src)
}
func (m *RadioCfgRequest) XXX_Size() int {
	return xxx_messageInfo_RadioCfgRequest.Size(m)
}
func (m *RadioCfgRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RadioCfgRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RadioCfgRequest proto.InternalMessageInfo

func (m *RadioCfgRequest) GetCluster() uint32 {
	if m != nil {
		return m.Cluster
	}
	return 0
}

type RadioCfgResponse struct {
	Network              uint32   `protobuf:"varint,1,opt,name=network,proto3" json:"network,omitempty"`
	RadioConfig          []byte   `protobuf:"bytes,2,opt,name=radio_config,json=radioConfig,proto3" json:"radio_config,omitempty"`
	AesKey               []byte   `protobuf:"bytes,3,opt,name=aes_key,json=aesKey,proto3" json:"aes_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RadioCfgResponse) Reset()         { *m = RadioCfgResponse{} }
func (m *RadioCfgResponse) String() string { return proto.CompactTextString(m) }
func (*RadioCfgResponse) ProtoMessage()    {}
func (*RadioCfgResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3040eb487de1b750, []int{1}
}

func (m *RadioCfgResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RadioCfgResponse.Unmarshal(m, b)
}
func (m *RadioCfgResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RadioCfgResponse.Marshal(b, m, deterministic)
}
func (m *RadioCfgResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RadioCfgResponse.Merge(m, src)
}
func (m *RadioCfgResponse) XXX_Size() int {
	return xxx_messageInfo_RadioCfgResponse.Size(m)
}
func (m *RadioCfgResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RadioCfgResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RadioCfgResponse proto.InternalMessageInfo

func (m *RadioCfgResponse) GetNetwork() uint32 {
	if m != nil {
		return m.Network
	}
	return 0
}

func (m *RadioCfgResponse) GetRadioConfig() []byte {
	if m != nil {
		return m.RadioConfig
	}
	return nil
}

func (m *RadioCfgResponse) GetAesKey() []byte {
	if m != nil {
		return m.AesKey
	}
	return nil
}

type Task struct {
	TaskId               uint32   `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_3040eb487de1b750, []int{2}
}

func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetTaskId() uint32 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

type TaskDetails struct {
	TaskId               uint32            `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	SensorId             uint32            `protobuf:"varint,2,opt,name=sensor_id,json=sensorId,proto3" json:"sensor_id,omitempty"`
	Config               *RadioCfgResponse `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TaskDetails) Reset()         { *m = TaskDetails{} }
func (m *TaskDetails) String() string { return proto.CompactTextString(m) }
func (*TaskDetails) ProtoMessage()    {}
func (*TaskDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_3040eb487de1b750, []int{3}
}

func (m *TaskDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskDetails.Unmarshal(m, b)
}
func (m *TaskDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskDetails.Marshal(b, m, deterministic)
}
func (m *TaskDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskDetails.Merge(m, src)
}
func (m *TaskDetails) XXX_Size() int {
	return xxx_messageInfo_TaskDetails.Size(m)
}
func (m *TaskDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskDetails.DiscardUnknown(m)
}

var xxx_messageInfo_TaskDetails proto.InternalMessageInfo

func (m *TaskDetails) GetTaskId() uint32 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

func (m *TaskDetails) GetSensorId() uint32 {
	if m != nil {
		return m.SensorId
	}
	return 0
}

func (m *TaskDetails) GetConfig() *RadioCfgResponse {
	if m != nil {
		return m.Config
	}
	return nil
}

type TaskUpdateResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskUpdateResponse) Reset()         { *m = TaskUpdateResponse{} }
func (m *TaskUpdateResponse) String() string { return proto.CompactTextString(m) }
func (*TaskUpdateResponse) ProtoMessage()    {}
func (*TaskUpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3040eb487de1b750, []int{4}
}

func (m *TaskUpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskUpdateResponse.Unmarshal(m, b)
}
func (m *TaskUpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskUpdateResponse.Marshal(b, m, deterministic)
}
func (m *TaskUpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskUpdateResponse.Merge(m, src)
}
func (m *TaskUpdateResponse) XXX_Size() int {
	return xxx_messageInfo_TaskUpdateResponse.Size(m)
}
func (m *TaskUpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskUpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TaskUpdateResponse proto.InternalMessageInfo

func (m *TaskUpdateResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type TaskFinishedRequest struct {
	TaskId               uint32   `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskFinishedRequest) Reset()         { *m = TaskFinishedRequest{} }
func (m *TaskFinishedRequest) String() string { return proto.CompactTextString(m) }
func (*TaskFinishedRequest) ProtoMessage()    {}
func (*TaskFinishedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3040eb487de1b750, []int{5}
}

func (m *TaskFinishedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskFinishedRequest.Unmarshal(m, b)
}
func (m *TaskFinishedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskFinishedRequest.Marshal(b, m, deterministic)
}
func (m *TaskFinishedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskFinishedRequest.Merge(m, src)
}
func (m *TaskFinishedRequest) XXX_Size() int {
	return xxx_messageInfo_TaskFinishedRequest.Size(m)
}
func (m *TaskFinishedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskFinishedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TaskFinishedRequest proto.InternalMessageInfo

func (m *TaskFinishedRequest) GetTaskId() uint32 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

func (m *TaskFinishedRequest) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*RadioCfgRequest)(nil), "configurator.RadioCfgRequest")
	proto.RegisterType((*RadioCfgResponse)(nil), "configurator.RadioCfgResponse")
	proto.RegisterType((*Task)(nil), "configurator.Task")
	proto.RegisterType((*TaskDetails)(nil), "configurator.TaskDetails")
	proto.RegisterType((*TaskUpdateResponse)(nil), "configurator.TaskUpdateResponse")
	proto.RegisterType((*TaskFinishedRequest)(nil), "configurator.TaskFinishedRequest")
}

func init() { proto.RegisterFile("configurator/api.proto", fileDescriptor_3040eb487de1b750) }

var fileDescriptor_3040eb487de1b750 = []byte{
	// 423 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xdf, 0x6f, 0xd3, 0x30,
	0x10, 0xc7, 0xdb, 0x02, 0xdd, 0x76, 0x0d, 0x02, 0x99, 0x5f, 0x65, 0x08, 0xe8, 0xfc, 0x34, 0x09,
	0x91, 0x4a, 0x9b, 0xe0, 0x11, 0x09, 0x3a, 0x81, 0x26, 0x24, 0x90, 0x2c, 0xf6, 0xc2, 0x4b, 0xe5,
	0xd9, 0xb7, 0xd6, 0x64, 0x8b, 0x33, 0x9f, 0x33, 0x94, 0xf1, 0xff, 0xf1, 0x77, 0x21, 0x3b, 0x89,
	0xc8, 0x56, 0x2a, 0xf6, 0x78, 0xdf, 0xfb, 0xf8, 0xee, 0x7b, 0xdf, 0x28, 0xf0, 0x58, 0xd9, 0xfc,
	0xc4, 0x2c, 0x4a, 0x27, 0xbd, 0x75, 0x53, 0x59, 0x98, 0xb4, 0x70, 0xd6, 0x5b, 0x96, 0x74, 0x75,
	0xfe, 0x0a, 0xee, 0x09, 0xa9, 0x8d, 0x9d, 0x9d, 0x2c, 0x04, 0x9e, 0x97, 0x48, 0x9e, 0x8d, 0x61,
	0x43, 0x9d, 0x96, 0xe4, 0xd1, 0x8d, 0xfb, 0x93, 0xfe, 0xee, 0x5d, 0xd1, 0x96, 0x7c, 0x09, 0xf7,
	0xff, 0xc2, 0x54, 0xd8, 0x9c, 0x30, 0xd0, 0x39, 0xfa, 0x9f, 0xd6, 0x65, 0x2d, 0xdd, 0x94, 0x6c,
	0x07, 0x12, 0x17, 0xe8, 0x79, 0xbd, 0x70, 0x3c, 0x98, 0xf4, 0x77, 0x13, 0x31, 0x8a, 0xda, 0x2c,
	0x4a, 0xec, 0x09, 0x6c, 0x48, 0xa4, 0x79, 0x86, 0xd5, 0xf8, 0x56, 0xec, 0x0e, 0x25, 0xd2, 0x67,
	0xac, 0xf8, 0x4b, 0xb8, 0xfd, 0x4d, 0x52, 0x16, 0x00, 0x2f, 0x29, 0x9b, 0x1b, 0xdd, 0x4c, 0x1f,
	0x86, 0xf2, 0x50, 0xf3, 0x5f, 0x30, 0x0a, 0xc0, 0x01, 0x7a, 0x69, 0x4e, 0x69, 0x2d, 0xc7, 0x9e,
	0xc1, 0x16, 0x61, 0x4e, 0xd6, 0x85, 0xd6, 0x20, 0xb6, 0x36, 0x6b, 0xe1, 0x50, 0xb3, 0xb7, 0x30,
	0x6c, 0xbc, 0x85, 0xed, 0xa3, 0xbd, 0x17, 0x69, 0x37, 0x9b, 0xf4, 0xfa, 0xad, 0xa2, 0xa1, 0x79,
	0x0a, 0x2c, 0x2c, 0x3f, 0x2a, 0xb4, 0xf4, 0xd8, 0x4d, 0x82, 0x4a, 0xa5, 0x90, 0x28, 0x7a, 0xd8,
	0x14, 0x6d, 0xc9, 0x0f, 0xe0, 0x41, 0xe0, 0x3f, 0x9a, 0xdc, 0xd0, 0x12, 0x75, 0x1b, 0xf4, 0x5a,
	0xd3, 0x0f, 0xe1, 0x0e, 0x3a, 0x67, 0x5d, 0x34, 0xbc, 0x25, 0xea, 0x62, 0xef, 0xf7, 0x00, 0x92,
	0x59, 0xc7, 0x1f, 0xfb, 0x02, 0xa3, 0x4f, 0xe8, 0x5b, 0x97, 0xec, 0xf9, 0x3a, 0xf7, 0x71, 0xdb,
	0xf6, 0x7f, 0x8e, 0xe3, 0x3d, 0xf6, 0xae, 0xce, 0xf4, 0xbd, 0x3a, 0x2f, 0x8d, 0x43, 0xc6, 0xae,
	0x3e, 0x08, 0xad, 0xed, 0xa7, 0xab, 0x5a, 0xf3, 0x09, 0x78, 0x8f, 0x7d, 0x85, 0x47, 0x51, 0x30,
	0xa4, 0xec, 0x05, 0xba, 0x4a, 0xa0, 0x42, 0x73, 0x81, 0xfa, 0x9f, 0x93, 0x26, 0xab, 0xda, 0xd5,
	0x3c, 0x79, 0x8f, 0x1d, 0x41, 0xd2, 0xcd, 0x8d, 0xed, 0xac, 0xbe, 0xb9, 0x96, 0xe9, 0x4d, 0xc6,
	0x7e, 0x78, 0xf3, 0x7d, 0x7f, 0x61, 0xfc, 0xb2, 0x3c, 0x4e, 0x95, 0x3d, 0x9b, 0xba, 0xcc, 0xfe,
	0x40, 0x7d, 0x69, 0x72, 0xba, 0xcc, 0xaa, 0xa9, 0x5f, 0xa2, 0x3b, 0xb3, 0xaf, 0x15, 0xe6, 0x1e,
	0xdd, 0xb4, 0x3b, 0xeb, 0x78, 0x18, 0xff, 0x9f, 0xfd, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd4,
	0xc0, 0x51, 0x95, 0x59, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConfiguratorClient is the client API for Configurator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConfiguratorClient interface {
	// Return radio configuration for receiver
	GetRadioCfg(ctx context.Context, in *RadioCfgRequest, opts ...grpc.CallOption) (*RadioCfgResponse, error)
	// Sensor configuration task: Acquire
	TaskAcquire(ctx context.Context, in *Task, opts ...grpc.CallOption) (*TaskDetails, error)
	// Sensor configuration task: Discovery received
	TaskDiscoveryReceived(ctx context.Context, in *Task, opts ...grpc.CallOption) (*TaskUpdateResponse, error)
	// Sensor configuration task: finished
	TaskFinished(ctx context.Context, in *TaskFinishedRequest, opts ...grpc.CallOption) (*TaskUpdateResponse, error)
}

type configuratorClient struct {
	cc *grpc.ClientConn
}

func NewConfiguratorClient(cc *grpc.ClientConn) ConfiguratorClient {
	return &configuratorClient{cc}
}

func (c *configuratorClient) GetRadioCfg(ctx context.Context, in *RadioCfgRequest, opts ...grpc.CallOption) (*RadioCfgResponse, error) {
	out := new(RadioCfgResponse)
	err := c.cc.Invoke(ctx, "/configurator.Configurator/GetRadioCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configuratorClient) TaskAcquire(ctx context.Context, in *Task, opts ...grpc.CallOption) (*TaskDetails, error) {
	out := new(TaskDetails)
	err := c.cc.Invoke(ctx, "/configurator.Configurator/TaskAcquire", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configuratorClient) TaskDiscoveryReceived(ctx context.Context, in *Task, opts ...grpc.CallOption) (*TaskUpdateResponse, error) {
	out := new(TaskUpdateResponse)
	err := c.cc.Invoke(ctx, "/configurator.Configurator/TaskDiscoveryReceived", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configuratorClient) TaskFinished(ctx context.Context, in *TaskFinishedRequest, opts ...grpc.CallOption) (*TaskUpdateResponse, error) {
	out := new(TaskUpdateResponse)
	err := c.cc.Invoke(ctx, "/configurator.Configurator/TaskFinished", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConfiguratorServer is the server API for Configurator service.
type ConfiguratorServer interface {
	// Return radio configuration for receiver
	GetRadioCfg(context.Context, *RadioCfgRequest) (*RadioCfgResponse, error)
	// Sensor configuration task: Acquire
	TaskAcquire(context.Context, *Task) (*TaskDetails, error)
	// Sensor configuration task: Discovery received
	TaskDiscoveryReceived(context.Context, *Task) (*TaskUpdateResponse, error)
	// Sensor configuration task: finished
	TaskFinished(context.Context, *TaskFinishedRequest) (*TaskUpdateResponse, error)
}

// UnimplementedConfiguratorServer can be embedded to have forward compatible implementations.
type UnimplementedConfiguratorServer struct {
}

func (*UnimplementedConfiguratorServer) GetRadioCfg(ctx context.Context, req *RadioCfgRequest) (*RadioCfgResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRadioCfg not implemented")
}
func (*UnimplementedConfiguratorServer) TaskAcquire(ctx context.Context, req *Task) (*TaskDetails, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TaskAcquire not implemented")
}
func (*UnimplementedConfiguratorServer) TaskDiscoveryReceived(ctx context.Context, req *Task) (*TaskUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TaskDiscoveryReceived not implemented")
}
func (*UnimplementedConfiguratorServer) TaskFinished(ctx context.Context, req *TaskFinishedRequest) (*TaskUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TaskFinished not implemented")
}

func RegisterConfiguratorServer(s *grpc.Server, srv ConfiguratorServer) {
	s.RegisterService(&_Configurator_serviceDesc, srv)
}

func _Configurator_GetRadioCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RadioCfgRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfiguratorServer).GetRadioCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/configurator.Configurator/GetRadioCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfiguratorServer).GetRadioCfg(ctx, req.(*RadioCfgRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Configurator_TaskAcquire_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Task)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfiguratorServer).TaskAcquire(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/configurator.Configurator/TaskAcquire",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfiguratorServer).TaskAcquire(ctx, req.(*Task))
	}
	return interceptor(ctx, in, info, handler)
}

func _Configurator_TaskDiscoveryReceived_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Task)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfiguratorServer).TaskDiscoveryReceived(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/configurator.Configurator/TaskDiscoveryReceived",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfiguratorServer).TaskDiscoveryReceived(ctx, req.(*Task))
	}
	return interceptor(ctx, in, info, handler)
}

func _Configurator_TaskFinished_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskFinishedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfiguratorServer).TaskFinished(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/configurator.Configurator/TaskFinished",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfiguratorServer).TaskFinished(ctx, req.(*TaskFinishedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Configurator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "configurator.Configurator",
	HandlerType: (*ConfiguratorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRadioCfg",
			Handler:    _Configurator_GetRadioCfg_Handler,
		},
		{
			MethodName: "TaskAcquire",
			Handler:    _Configurator_TaskAcquire_Handler,
		},
		{
			MethodName: "TaskDiscoveryReceived",
			Handler:    _Configurator_TaskDiscoveryReceived_Handler,
		},
		{
			MethodName: "TaskFinished",
			Handler:    _Configurator_TaskFinished_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "configurator/api.proto",
}
